---

# install pacemaker resource agents

- name: install mssql-server-ha package
  package:
    name: mssql-server-ha
    state: latest


# create AG

- name: create AG with all replicas in secondary role
  mssql_ag:
    name: "{{ ag_name }}"
    state: all_secondaries_or_unjoined
    login_port: "{{ tsql_endpoint_port }}"
    login_name: 'sa'
    login_password: "{{ sa_password }}"

- name: promote one replica to AG primary and join others to it
  mssql_ag:
    name: "{{ ag_name }}"
    state: all_joined_to_one_primary
    all_replicas: "{{ groups['servers'] }}"
    primary: "{{ groups['servers'][0] }}"
    local_replica: "{{ inventory_hostname }}"
    dbm_endpoint_port: "{{ dbm_endpoint_port }}"
    login_port: "{{ tsql_endpoint_port }}"
    login_name: 'sa'
    login_password: "{{ sa_password }}"


# create listener

- name: create listener
  mssql_ag_listener:
    name: "{{ ag_name }}_listener"
    ag_name: "{{ ag_name }}"
    ip:
      - "{{ ag_listener_ip }}"
    readonly_routing_replicas: "{{ groups['servers'] }}"
    login_port: "{{ tsql_endpoint_port }}"
    login_name: 'sa'
    login_password: "{{ sa_password }}"
  when: inventory_hostname == groups['servers'][0] and ag_listener_ip != ''


# create pacemaker login

- name: create pacemaker login
  mssql_login:
    name: "{{ pacemaker_login }}"
    password: "{{ pacemaker_password }}"
    roles:
      - sysadmin
    login_port: "{{ tsql_endpoint_port }}"
    login_name: 'sa'
    login_password: "{{ sa_password }}"

- name: create pacemaker passwd file
  copy:
    content: |
      {{ pacemaker_login }}
      {{ pacemaker_password }}
    dest: /var/opt/mssql/secrets/passwd
    mode: 0400


# create AG pacemaker resource

- name: create AG pacemaker resource
  shell: |
    pcs resource show '{{ ag_name }}' ||
    pcs resource create '{{ ag_name }}' ocf:mssql:ag \
      'ag_name={{ ag_name }}' \
      --master meta \
      master-max=1 master-node-max=1 clone-max={{ groups['servers']|length }} notify=true
  when: inventory_hostname == groups['servers'][0]


# Create AG listener pacemaker resource

- name: create AG listener pacemaker resource
  shell: |
    pcs resource show '{{ ag_name }}_listener' || \
    pcs resource create '{{ ag_name }}_listener' ocf:heartbeat:IPaddr2 \
      'ip={{ ag_listener_ip }}' \
      'nic={{ ag_listener_nic }}'
  when: inventory_hostname == groups['servers'][0]

- name: colocate AG listener with AG primary
  command: pcs constraint colocation add '{{ ag_name }}_listener' with master '{{ ag_name }}'-master
  when: inventory_hostname == groups['servers'][0]
